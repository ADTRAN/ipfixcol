CC      = @CC@
CFLAGS  = @CFLAGS@
LIBS    = @LIBS@ -lpq
INCLUDE = "-I../../../"

prefix = @prefix@
exec_prefix = @exec_prefix@
datarootdir = @datarootdir@
datadir = @datadir@
bindir = @bindir@
includedir = @includedir@
libdir =  @libdir@
mandir = @mandir@

TARGETS = ipfixcol_postgres_output.so
TOPDIR = @CONFIGURE_PWD@
NAME = @PACKAGE_NAME@
RELEASE = @RELEASE@
RPMBUILD = rpmbuild
INSTALL = @INSTALL@
INSTALL_PROGRAM = @INSTALL_PROGRAM@
VERSION = $(shell cut -f1 $(TOPDIR)/VERSION | tr -d '\n')
DIR = "src/storage/postgres"
RPMDIR = RPMBUILD

SRCS = postgres_output.c
OBJ = postgres_output.o
HDRS = ipfix_entities.h ipfix_postgres_types.h

all: ipfixcol_postgres_output.so

ipfixcol_postgres_output.so: $(OBJ)
	$(CC) $(CFLAGS) $(LIBS) -shared -Wl,-soname,ipfixcol_postgres_output.so.1 -o $@ $< -lc

$(OBJ): $(SRCS)
	@for i in $(SRCS); do \
		$(CC) $(CFLAGS) $(INCLUDE) -fPIC -c $$i; \
	done;

clean:
	-rm -f $(TARGETS) $(OBJ)

.PHONY: tarball-prepare
tarball-prepare:
	@for i in Makefile.in $(SRCS) $(HDRS) $(MANSRCS) $(DOC); do \
		[ -d $(TOPDIR)/$(NAME)-$(VERSION)/$(DIR) ] || \
		mkdir -p $(TOPDIR)/$(NAME)-$(VERSION)/$(DIR) -p; \
		cp $$i $(TOPDIR)/$(NAME)-$(VERSION)/$(DIR)/$$i; \
	done;

.PHONY: install
install: $(TARGETS)
	[ -d $(DESTDIR)/$(libdir) ] || \
		(mkdir -p $(DESTDIR)/$(libdir); chmod 755 $(DESTDIR)/$(libdir));
	$(INSTALL_PROGRAM) $(TARGETS) $(DESTDIR)/$(libdir)/;

.PHONY: dist
dist: tarball rpm

.PHONY: tarball
tarball: $(SRCS) $(HDRS) $(PHDRS)
	@rm -rf $(NAME)-$(VERSION); \
	mkdir $(NAME)-$(VERSION); \
	rm -rf $(RPMDIR)/SOURCES/; \
	mkdir -p $(RPMDIR)/SOURCES/; \
	for i in $(SRCS) $(HDRS) $(CONF) configure.in configure Makefile.in VERSION \
		$(NAME).spec.in install-sh; do \
		[ "$$i" != "$${i%/*}" -a ! -d $(NAME)-$(VERSION)/$${i%/*} ] && mkdir -p $(NAME)-$(VERSION)/$${i%/*}; \
		cp $$i $(NAME)-$(VERSION)/$$i; \
	done;
	cp -r ../../../headers $(TOPDIR)/$(NAME)-$(VERSION)/
	cp -r ../../../ipfixcol.h $(TOPDIR)/$(NAME)-$(VERSION)/
	tar -c -z -f $(RPMDIR)/SOURCES/$(NAME)-$(VERSION)-$(RELEASE).tar.gz \
	    $(NAME)-$(VERSION);
	@rm -rf $(NAME)-$(VERSION);

.PHONY: rpm
rpm: tarball $(NAME).spec
	@mkdir -p $(RPMDIR)/BUILD $(RPMDIR)/RPMS $(RPMDIR)/SOURCES $(RPMDIR)/SPECS $(RPMDIR)/SRPMS;
	$(RPMBUILD) -ba $(NAME).spec \
		--define "_topdir `pwd`/$(RPMDIR)";

.PHONY: cleanall
cleanall: clean distclean

.PHONY: distclean
distclean:
	rm -rf $(RPMDIR)


